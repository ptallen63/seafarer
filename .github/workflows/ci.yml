# Main CI Workflow for CI pipeline
# -- Type-check
# -- Build
# -- Test
# -- E2E Tets
name: CI

on:
  push:
    branches-ignore:
      - main
  workflow_call:
    inputs:
      environment:
        description: 'A env passed from the caller workflow'
        default: 'development'
        required: false
        type: string
jobs:
  setup:
    name: Housekeeping
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ›‘ Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          # The CI workflow
          workflow_id: 25647852
          access_token: ${{ secrets.gh-token }}
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [type-check]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Cache Cypress
        uses: actions/cache@v3
        env:
          cypress-cache-name: cache-cypress
        with:
          path: ~/.cache # npm cache files are stored in `~/.npm` on Linux/macOS
          key: $v1.0.7-{{ runner.os }}-build-${{ env.cypress-cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build App
        run: npm run build

      - name: Upload build
        if: inputs.environment == 'production'
        uses: actions/upload-artifact@v3
        with:
          name: lib
          path: |
            lib
            !lib/**/*.md

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [type-check]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Cache Cypress
        uses: actions/cache@v3
        env:
          cypress-cache-name: cache-cypress
        with:
          path: ~/.cache #  cache files are stored in `~/.npm` on Linux/macOS
          key: $v1.0.7-{{ runner.os }}-build-${{ env.cypress-cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cypress-cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm ci

        # ES LINT
      - name: Run eslint
        run: npm run lint

  type-check:
    name: Type Checking
    runs-on: ubuntu-latest
    needs: [setup]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Cache Cypress
        uses: actions/cache@v3
        env:
          cypress-cache-name: cache-cypress
        with:
          path: ~/.cache #  cache files are stored in `~/.npm` on Linux/macOS
          key: $v1.0.7-{{ runner.os }}-build-${{ env.cypress-cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run Typescrit Compiler
        run: npm run type-check

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [type-check]

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v2

    - name: Cache Cypress
      uses: actions/cache@v3
      env:
        cypress-cache-name: cache-cypress
      with:
        path: ~/.cache # npm cache files are stored in `~/.npm` on Linux/macOS
        key: $v1.0.7-{{ runner.os }}-build-${{ env.cypress-cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'

    - name: Install Node.js dependencies
      run: npm ci

    - name: Run Unit Tests
      run: npm run test:ci
  # e2e:
  #   name: e2e
  #   runs-on: ubuntu-latest
  #   needs: [test, lint, build]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: Cache node modules
  #       uses: actions/cache@v3
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
  #         key: $v1.0.7-{{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #
  #     - name: Cache Cypress
  #       uses: actions/cache@v3
  #       env:
  #         cypress-cache-name: cache-cypress
  #       with:
  #         path: ~/.cache # npm cache files are stored in `~/.npm` on Linux/macOS
  #         key: $v1.0.7-{{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #
  #     # Install NPM dependencies, cache them correctly
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 1

  #     - name: Install Node.js dependencies
  #       run: npm ci

  #     # and run all Cypress tests
  #     - name: Cypress run
  #       run: npm run test:e2e:ci